<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright 2011 http://bluefoot.info

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>info.bluefoot</groupId>
  <artifactId>datacomponentstest</artifactId>
  <packaging>war</packaging>
  <version>1.0-RELEASE</version>

  <name>Simple test project for the components DataNavigator e DataOrderer</name>

  <properties>
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
    <org.slf4j.version>1.5.10</org.slf4j.version>
    <log4j.log4j.version>1.2.15</log4j.log4j.version>
    <jsf-version>2.1.1-b04</jsf-version>
    <javax.servlet.servlet-api.version>2.5</javax.servlet.servlet-api.version>
    <com.ocpsoft.prettyfaces.version>3.2.0</com.ocpsoft.prettyfaces.version>
    <org.hibernate.version>3.6.2.Final</org.hibernate.version>
    <org.springframework.version>3.0.5.RELEASE</org.springframework.version>
    <javax.validation.validation-api.version>1.0.0.GA</javax.validation.validation-api.version>
    <org.hibernate.hibernate-validator.version>4.1.0.Final</org.hibernate.hibernate-validator.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <excludes>**/.*.java</excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
          <wtpmanifest>true</wtpmanifest>
          <wtpapplicationxml>true</wtpapplicationxml>
          <wtpversion>2.0</wtpversion>
          <additionalProjectFacets>
            <jst.web>2.5</jst.web>
            <jst.java>6.0</jst.java>
            <jst.jsf>2.0</jst.jsf>
            <wst.jsdt.web>1.0</wst.jsdt.web>
          </additionalProjectFacets>
          <manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
          <useProjectReferences>false</useProjectReferences>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <!-- jboss public repository: hibernate -->
    <repository>
      <id>repository.jboss.org-public</id>
      <name>JBoss repository</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>

    <!-- Springframework Maven repository -->
    <repository>
      <id>springframework-mavem-repo</id>
      <name>Springframework Maven repository</name>
      <url>http://maven.springframework.org/snapshot/</url>
    </repository>

    <!-- Sun Mojarra JSF 2.x -->
    <repository>
      <id>java.net.release</id>
      <name>Repository for Projects On Hosted on java.net</name>
      <url>http://download.java.net/maven/2</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>info.bluefoot</groupId>
      <artifactId>components</artifactId>
      <version>0.1-RELEASE</version>
    </dependency>

    <!-- Adapters ========================================================= -->

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.10</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Hibernate ======================================================== -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${org.hibernate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${org.hibernate.hibernate-validator.version}</version>
    </dependency>

    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.9.0.GA</version>
    </dependency>

    <!-- jsf============================================================= -->

    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <version>${jsf-version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>${jsf-version}</version>
    </dependency>

    <!-- log=============================================================== -->

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${org.slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${org.slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${org.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.log4j.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
      </exclusions>
      <scope>runtime</scope>
    </dependency>

    <!-- Servlet API ====================================================== -->

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${javax.servlet.servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Prettyfaces ====================================================== -->

    <dependency>
      <groupId>com.ocpsoft</groupId>
      <artifactId>prettyfaces-jsf2</artifactId>
      <version>${com.ocpsoft.prettyfaces.version}</version>
    </dependency>

    <!-- Spring ================================================================== -->

    <!-- Core utilities used by other modules. Define this if you use Spring 
      Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Expression Language (depends on spring-core) Define this if you 
      use Spring Expression APIs (org.springframework.expression.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
      this if you use Spring Bean APIs (org.springframework.beans.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Application Context (depends on spring-core, spring-expression, 
      spring-aop, spring-beans) This is the central artifact for Spring's Dependency 
      Injection Container and is generally always defined -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${org.springframework.version}</version>
      <exclusions>
        <!-- Exclude Commons Logging in favor of SLF4j -->
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Various Application Context utilities, including EhCache, JavaMail, 
      Quartz, and Freemarker integration Define this if you need any of these integrations -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
      spring-aop, spring-context) Define this if you use Spring Transactions or 
      DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- JDBC Data Access Library (depends on spring-core, spring-beans, 
      spring-context, spring-tx) Define this if you use Spring's JdbcTemplate API 
      (org.springframework.jdbc.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
      and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
      Define this if you need ORM (org.springframework.orm.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
      JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
      spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Web application development utilities applicable to both Servlet 
      and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
      Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
      web framework with Spring (org.springframework.web.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
      spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
      Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
      spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
      Container (org.springframework.web.portlet.*) -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc-portlet</artifactId>
      <version>${org.springframework.version}</version>
    </dependency>

    <!-- Support for testing Spring applications with tools such as JUnit 
      and TestNG This artifact is generally always defined with a 'test' scope 
      for the integration testing framework and unit testing stubs -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${org.springframework.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- JSR-330 ================================================================== -->

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <!-- CGLIB ================================================================== -->

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2.2</version>
    </dependency>

    <!-- TEST ================================================================== -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>


    <!-- commons ========================================================== -->

    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.3.1</version>
    </dependency>


  </dependencies>
</project>
